version: '3.8'

services:
  mysql:
    image: mysql:8
    container_name: dotnetactuatormiddleware_mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping" ]
      retries: 5
      interval: 30s
    environment:
      - MYSQL_ROOT_PASSWORD=r00t
      - MYSQL_DATABASE=testdb
    ports:
      - 127.0.0.1:19306:3306
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.1.2
    container_name: dotnetactuatormiddleware_elasticsearch
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://127.0.0.1:9200/" ]
      retries: 5
      interval: 30s
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
    ports:
      - 127.0.0.1:19200:9200
  elasticsearch-auth:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.1.2
    container_name: dotnetactuatormiddleware_elasticsearch_auth
    healthcheck:
      test: [ "CMD", "curl", "-f", "-u", "elastic:changeme", "http://127.0.0.1:9200/" ]
      retries: 5
      interval: 30s
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=changeme
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
    ports:
      - 127.0.0.1:19201:9200
  elasticsearch-ssl:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.1.2
    container_name: dotnetactuatormiddleware_elasticsearch_ssl
    healthcheck:
      test: [ "CMD", "curl", "-k", "-f", "-u", "elastic:changeme", "https://127.0.0.1:9200/" ]
      retries: 5
      interval: 30s
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=changeme
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=/usr/share/elasticsearch/config/es-key.pem
      - xpack.security.http.ssl.certificate=/usr/share/elasticsearch/config/es-cert.pem
      - xpack.security.http.ssl.certificate_authorities=/usr/share/elasticsearch/config/ca.pem
    ports:
      - 127.0.0.1:19202:9200
    volumes:
      - "./fixtures/elasticsearch_certs/es-key.pem:/usr/share/elasticsearch/config/es-key.pem"
      - "./fixtures/elasticsearch_certs/es-cert.pem:/usr/share/elasticsearch/config/es-cert.pem"
      - "./fixtures/elasticsearch_certs/ca.pem:/usr/share/elasticsearch/config/ca.pem"
    
  # A tiny container that runs 'true' so that we have something that will make Docker compose
  # wait until the entire stack is healthy
  stack_is_ready:
    image: tianon/true
    depends_on:
      elasticsearch:
        condition: service_healthy
      elasticsearch-auth:
        condition: service_healthy
      elasticsearch-ssl:
        condition: service_healthy
      mysql:
        condition: service_healthy